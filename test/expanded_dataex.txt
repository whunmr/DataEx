/*----------------------------------------------------------------------------*/
//namespace _DataX {
//  struct DataX : Serializable {
//    DataX() {
//      fields_infos_ = &kFieldsInfos[0];      
//      a = int();
//      b = int();
//    }
//    
//    int a; enum {__tag_a = 1};
//    int b; enum {__tag_b = 2};
//    enum {__field_count = 2};
//    uint8_t fields_presence_[__field_count / 8 + 1];
//    enum { encode_size = 0 + sizeof(tag_t) + sizeof(len_t) + EncodeSizeGetter<int>::encode_size
//                           + sizeof(tag_t) + sizeof(len_t) + EncodeSizeGetter<int>::encode_size };
//    static const FieldInfo kFieldsInfos[];
//  };
//  
//  typedef DataX DataType;
//  
//  const FieldInfo DataX::kFieldsInfos[] = {
//      { EncodeSizeGetter<int>::encode_size, offsetof(DataType, a), __tag_a, &Encoder<int>::encode, &Decoder<int>::decode }
//    , { EncodeSizeGetter<int>::encode_size, offsetof(DataType, b), __tag_b, &Encoder<int>::encode, &Decoder<int>::decode }
//    , { 0, kTagInvalid }
//  };
//}
//using _DataX::DataX;

/*----------------------------------------------------------------------------*/
//  struct DataWithNested : Serializable {
//    DataWithNested() {
//      fields_infos_ = &kFieldsInfos[0];      
//      a = int();
//      x = DataX();
//      b = int();    
//    }
//  
//    int   a; enum {__tag_a = 1};
//    DataX x; enum {__tag_x = 2};
//    int   b; enum {__tag_b = 3};
//    enum { encode_size = 0 + ENCODE_SIZE_TLV(int) + ENCODE_SIZE_TLV(DataX) + ENCODE_SIZE_TLV(int) };
//  
//    static const FieldInfo kFieldsInfos[];
//  };
//  
//  const FieldInfo DataWithNested::kFieldsInfos[] = {
//   { EncodeSizeGetter<int>::encode_size   , offsetof(DataWithNested, a), __tag_a, &Encoder<int>::encode   , &Decoder<int>::decode}
//  ,{ EncodeSizeGetter<DataX>::encode_size , offsetof(DataWithNested, x), __tag_x, &Encoder<DataX>::encode , &Decoder<DataX>::decode}
//  ,{ EncodeSizeGetter<int>::encode_size   , offsetof(DataWithNested, b), __tag_b, &Encoder<int>::encode   , &Decoder<int>::decode}
//  ,{ 0, 0, kTagInvalid, NULL }
//  };

